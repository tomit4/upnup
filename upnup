#!/usr/bin/env bash
set -e

printhelp () {
    printf "%s\n" "Usage: upnup [options] [command]"
    printf "%s\n" ""
    printf "%s\n" "Options:"
    printf "%s\n" "  -V, --version              output the version number"
    printf "%s\n" "  -h, --help                 output usage information"
    printf "%s\n" "  -u, --user [user]          The user/organization who holds the license"
    printf "%s\n" "  -y, --year [year]          The year the license is in effect"
    printf "%s\n" "  -f, --file <file>          The file to add a header to"
    printf "%s\n" ""
    printf "%s\n" "Commands:"
    printf "%s\n" "  list|l                     List all available licenses"
    printf "%s\n" "  put|p [options] <license>  Put a license in this directory"
    printf "%s\n" ""
    printf "%s\n" "Notes:"
    printf "%s\n" "  if used, -f flag must always come before p command"
    printf "%s\n" "  call upnup from root of project when using -f flag"
    printf "%s\n" "  projectname in headers defaults to current directory name"
    printf "%s\n" ""
    printf "%s\n" "Examples:"
    printf "%s\n" "  upnup p mit"
    printf "%s\n" "  upnup -u \"john doe\" -y 2021 p bsd-3-clause"
    printf "%s\n" "  upnup -f agpl-3.0 p src/test.js"
    printf "%s\n" "  upnup -u \"john doe\" -y 2021 -f cc0-1.0 p src/main/file.py"
    exit 0
}

main () {
    args=("$@")
    user=$USER
    year=$(date | awk -F ' ' '{ print $NF }')
    license_list="$(find "$HOME"/.config/upnup/licenses | sed 1d | awk -F '/' '{ print $NF }' | sort)"
    lcs_list=( agpl-3.0 apache-2.0 bsd-2-clause bsd-3-clause bsl-1.0 cc0-1.0 cc0-3.0 cc0-4.0 epl-2.0 gpl-2.0 gpl-3.0 lgpl-2.1 mit mpl-2.0 unlicense )
    mod_list=( agpl-3.0 bsd-2-clause bsd-3-clause mit )
    header_list=( agpl-3.0 apache-2.0 cc0-1.0 cc0-3.0 cc0-4.0 gpl-2.0 gpl-3.0 lgpl-2.1 lgpl-3.0 )

    if [[ $# -lt 1 ]] ; then
        printhelp
    fi

    for (( i = 0; i < $#; i++ )) ; do
        j=$((i + 1))

        if [[ "${args[$i]}" == '-u' || "${args[$i]}" == '--user' ]] ; then
            user="${args[$j]}"
        elif [[ "${args[$i]}" == '-y' || "${args[$i]}" == '--year' ]] ; then
            year="${args[$j]}"

        elif [[ "${args[$i]}" == '-f' || "${args[$i]}" == '--file' ]] ; then
            if [ "${args[$j]}" == '' ] ; then
                printf "%s\n" "error: missing required argument \`header_file'"
                exit 1
            fi

            headerfile="${args[$j]}"
            if [[ ! "${header_list[*]}" =~ ${headerfile} ]] ; then
                printf "%s\n" "error: requested headerfile is not supported"
                exit 1
            fi

            for (( k = 0; k < $#; k++ )) ; do
                m=$((k + 1))
                if [[ "${args[$k]}" == 'p' || "${args[$k]}" == 'put' ]] ; then
                    if [ "${args[$m]}" == '' ] ; then
                        printf "%s\n" "error: missing required argument \`license'"
                        exit 1
                    else
                        filetype=$(printf "%s\n" "${args[$m]}" | awk -F '.' '{ print $2 }')
                        outputfile="${args[$m]}"
                        annota block "${filetype}" "$HOME/.config/upnup/headers/${headerfile}" "${outputfile}" -u "${user}" -y "${year}"
                        exit 0
                    fi
                fi
            done

        elif [[ "${args[$i]}" == 'p' || "${args[$i]}" == 'put' ]] ; then
            if [ "${args[$j]}" == '' ] ; then
                printf "%s\n" "error: missing required argument \`license'"
                exit 1
            else

                if [[ ! "${lcs_list[*]}" =~ ${args[$j]} ]] ; then
                    printf "%s\n" "error: ${args[$j]} is not an included \`license"
                    exit 1
                fi
                if [[ "${mod_list[*]}" =~ ${args[$j]} ]] ; then
                    cp "$HOME"/.config/upnup/licenses/"${args[$j]}" ./tmp
                    sed "0,/\[year\]/s/\[year\]/$year/" ./tmp > tmp2
                    sed "0,/\[fullname\]/s/\[fullname\]/$user/" ./tmp2 > LICENSE
                    rm tmp tmp2
                else
                    cp "$HOME"/.config/upnup/licenses/"${args[$j]}" ./LICENSE
                fi
            exit 0
            fi

        elif [[ "${args[$i]}" == 'l' || "${args[$i]}" == 'list' ]] ; then
            printf "%s\n" "$license_list"
            exit 0

        elif [[ "${args[$i]}" == '-h' || "${args[$i]}" == '--help' ]] ; then
            printhelp
        elif [[ "${args[$i]}" == '-V' || "${args[$i]}" == '--version' ]] ; then
            printf "%s\n" "0.0.1"
            exit 0
        fi
    done
}

main "$@"

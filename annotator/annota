#!/usr/bin/env bash
set -e

# annota is meant to be used in conjunction with upnup.
# although it can be utilized on its on, its functionality is limited

source "$HOME"/.config/upnup/annotator/checkfiletype
# source ./checkfiletype

printhelp () {
    printf "%s\n" "Usage: block filetype headerfile outputfile"
    printf "%s\n" "Usage: inline filetype headerfile outputfile"
    printf "%s\n" "Example: annota block js agpl-3.0 example.js"
    printf "%s\n" "Example: annota block js agpl-3.0 example.js -u fullname -y currentyear"
    exit 0
}

annota () {
    user=$USER
    year=$(date | awk -F ' ' '{ print $NF }')
    projectname=$(pwd | awk -F '/' '{ print $NF }')
    local blocktype=$1
    local filetype=$2
    local header_file=$3
    local outputfile=$4
    local userflag=$5
    local newusername=$6
    local yearflag=$7
    local newyear=$8

    if [[ $# -lt 4 ]] ; then
        printhelp
    fi

    if [[ "$userflag" == '-u' || "$userflag" == '--user' ]] ; then
        user="$newusername"
    fi
    if [[ "$yearflag" == '-y' || "$yearflag" == '--year' ]] ; then
        year="$newyear"
    fi

    if [[ $blocktype != "block" &&  $blocktype != "inline" ]] ; then
        printf "%s\n" "error: only 'block' or 'inline' are recognized blocktypes"
        exit 1
    fi

    if checkfiletype "$filetype" ; then
        inline_only=( sql lua rs bash ksh mksh csh ttsh sh nginx scm rkt clj lisp cl )
        if [[ "${inline_only[*]}" =~ ${filetype} ]] ; then
            blocktype="inline"
        fi

        if [[ $blocktype == "block" ]] ; then
            formatted_comment=$(while read -r line ; do echo "$line" ; done < "$header_file")
        elif [[ $blocktype == "inline" ]] ; then
            formatted_comment=$(while read -r line ; do echo "$inline $line" ; done < "$header_file")
        fi

        if [[ $blocktype == "block" ]]; then
            block_comment=$(printf "%s" "${formatted_comment}")
            printf "${start}\n%s\n${end}\n" "${block_comment}" > tmp
        elif [[ $blocktype == "inline" ]] ; then
            block_comment=$(printf "%s" "${formatted_comment}")
            printf "\n%s\n\n" "${block_comment}" > tmp
        fi
        cat "$outputfile" >> tmp
        rm "$outputfile"
        sed "0,/\[year\]/s/\[year\]/$year/" ./tmp > tmp2
        cat tmp2 | sed -e "s:\[projectname\]:${projectname}:g" > tmp3
        sed "0,/\[fullname\]/s/\[fullname\]/$user/" ./tmp3 > "$outputfile"
        rm tmp tmp2 tmp3
        exit 0
    else
        printf "%s\n" "error: specified filetype is not supported by annota"
        exit 1
    fi
}

annota "$@"

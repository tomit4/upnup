#!/usr/bin/env bash
set -e

dependencycheck() {
    numdependencies="$#"
    dependencies=("$@")
    missingdependencies=0
    for ((i = 0; i < numdependencies; i++)) ; do
        if ! command -v "${dependencies[$i]}" &> /dev/null ; then
            printf "dependency not met: %s\n" "${dependencies[$i]}"
            missingdependencies=$((missingdependencies+1))
        fi
    done
    if [ $missingdependencies -gt 0 ]; then
        exit 1
    fi
}

printhelp () {
    printf "%s\n" "Usage: license [options] [command]"
    printf "%s\n" ""
    printf "%s\n" "Options:"
    printf "%s\n" "  -V, --version              output the version number"
    printf "%s\n" "  -h, --help                 output usage information"
    printf "%s\n" ""
    printf "%s\n" "Commands:"
    printf "%s\n" "  list|l                     List all available licenses"
    printf "%s\n" "  put|p [options] <license>  Put a license in this directory"
    exit 0
}

main () {
    args=("$@")
    user=$USER
    year=$(date | awk -F ' ' '{print $7}')
    lic_list=( agpl-3.0 apache-2.0 bsd-2-clause bsd-3-clause bsl-1.0 cc0-1.0 cc0-3.0 cc0-4.0 epl-2.0 gpl-2.0 gpl-3.0 lgpl-2.1 mit mpl-2.0 unlicense )
    mod_list=( agpl-3.0 bsd-2-clause bsd-3-clause mit )

    if [[ $# -lt 1 ]] ; then
        printhelp
    fi

    for (( i=0; i < $#; i++)) ; do
        j=$((i+1))

        if [[ "${args[$i]}" == 'l' || "${args[$i]}" == 'list' ]] ; then
            license_list="$(/usr/bin/ls -l "$HOME"/.config/license/licenses | awk -F ' ' '{print $9}')"
            printf "%s\n" "$license_list" | sed 1d
            exit 0

        elif [[ "${args[$i]}" == '-u' || "${args[$i]}" == '--user' ]] ; then
            user="${args[$j]}"
        elif [[ "${args[$i]}" == '-y' || "${args[$i]}" == '--year' ]] ; then
            year="${args[$j]}"

        elif [[ "${args[$i]}" == 'p' || "${args[$i]}" == 'put' ]] ; then
            if [ $j == '' ] ; then
                printf "%s\n" "error: missing required argument \`license'"
                exit 1
            else
                if [[ ! " ${lic_list[*]} " =~ ${args[$j]} ]]; then
                    printf "%s\n" "error: ${args[$j]} is not an included \`license"
                    exit 1
                fi
                if [[ " ${mod_list[*]} " =~ ${args[$j]} ]]; then
                    dependencycheck sponge
                    cp "$HOME"/.config/license/licenses/"${args[$j]}" ./LICENSE
                    sed "0,/\[year\]/s/\[year\]/$year/" ./LICENSE | sponge ./LICENSE
                    sed "0,/\[fullname\]/s/\[fullname\]/$user/" ./LICENSE | sponge ./LICENSE
                else
                    cp "$HOME"/.config/license/licenses/"${args[$j]}" ./LICENSE
                fi
            exit 0
            fi

        elif [[ "${args[$i]}" == '-h' || "${args[$i]}" == '--help' ]] ; then
            printhelp
        elif [[ "${args[$i]}" == '-V' || "${args[$i]}" == '--version' ]] ; then
            printf "%s\n" "0.0.1" & exit 0

        fi
    done
}

main "$@"
